// Program written to mimic my Gameboy Advance game
// Escape the Godfather (ETG)
// Author: Shaun Cassar

/**
 * Player class of the ETG game.
 */
class Player {

    field int x; 
    field int y; 
    field int prevx; 
    field int prevy;
    field int width;
    field int height; 
    field int speed; 
    field Array2d image; 


    constructor Player new() {

        let width = 8; 
        let height = 8; 
        let speed = 5; 
        let x = 256-(width/2);
        let y = 220;

        let image = Array2d.new(8,8);
    
        // Tedious but I am not sure a better way to set up an array initialisation manually

        do image.set(0,0,0);do image.set(0,1,0);do image.set(0,2,1);do image.set(0,3,0);do image.set(0,4,0);do image.set(0,5,1);do image.set(0,6,0);do image.set(0,7,0);
        do image.set(1,0,1);do image.set(1,1,1);do image.set(1,2,1);do image.set(1,3,0);do image.set(1,4,0);do image.set(1,5,1);do image.set(1,6,1);do image.set(1,7,1);
        do image.set(2,0,1);do image.set(2,1,1);do image.set(2,2,1);do image.set(2,3,0);do image.set(2,4,0);do image.set(2,5,1);do image.set(2,6,1);do image.set(2,7,1);
        do image.set(3,0,1);do image.set(3,1,0);do image.set(3,2,1);do image.set(3,3,1);do image.set(3,4,1);do image.set(3,5,0);do image.set(3,6,1);do image.set(3,7,0);
        do image.set(4,0,1);do image.set(4,1,0);do image.set(4,2,1);do image.set(4,3,1);do image.set(4,4,1);do image.set(4,5,0);do image.set(4,6,0);do image.set(4,7,1);
        do image.set(5,0,0);do image.set(5,1,1);do image.set(5,2,1);do image.set(5,3,0);do image.set(5,4,0);do image.set(5,5,1);do image.set(5,6,1);do image.set(5,7,0);
        do image.set(6,0,1);do image.set(6,1,1);do image.set(6,2,1);do image.set(6,3,1);do image.set(6,4,1);do image.set(6,5,1);do image.set(6,6,1);do image.set(6,7,1);
        do image.set(7,0,0);do image.set(7,1,0);do image.set(7,2,1);do image.set(7,3,0);do image.set(7,4,0);do image.set(7,5,1);do image.set(7,6,0);do image.set(7,7,0);

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do image.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method int getHeight() { 
        return height;
    }

    method int getWidth() { 
        return width;
    }

    method int getX() { 
        return x;
    }

    method int getY() { 
        return y;
    }

    method void draw() {
        var int i,j;
        var int value; 
        let i = 0;
        let j = 0;
        let value = 0;

        //First clean up the old sprite 
        do clean();
        
        do Screen.setColor(true); 
        
        while (i < 8) { 
            
            while (j < 8) { 
                let value = image.get(i, j);

                if (value = 1) { 
                    do Screen.setColor(true); 
                }
                else { 
                    do Screen.setColor(false); 
                }

                do Screen.drawPixel(x+j,y+i);
                let j = j+1;
            }

            let i = i+1;
            let j = 0;
        }
        
        //do Screen.drawRectangle(x, y, x+width, y+height);     
        return;   
    }

    //Update movement based on input key
    method void update(int key) { 

        let prevx = x;
        let prevy =y;    

        // Left arrow
        if (key = 130) { 
           let x = x - speed;
        }
        //Right arrow
        if (key = 132) { 
           let x = x + speed;
        }

        return;

    }

    //Clean previous position
    method void clean() { 

        do Screen.setColor(false); 
        do Screen.drawRectangle(prevx, prevy, prevx+width, prevy+height);   

        return;
    }
}
